var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LibRaw","category":"page"},{"location":"#LibRaw","page":"Home","title":"LibRaw","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LibRaw.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LibRaw]","category":"page"},{"location":"#LibRaw.camera_multiplier-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.camera_multiplier","text":"camera_multiplier(image:RawImage)\n\nReturn of vector of length 4 containing the camera multipliers https://www.libraw.org/node/2411\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.color_description-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.color_description","text":"color_description(image::RawImage)\n\nDescription of colors numbered from 0 to 3 (RGBG,RGBE,GMCY, or GBTG).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.color_index-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.color_index","text":"LibRaw.color_index(image::LibRawImage)\n\nReturns a matrix with the same dimension as the RAW image containing the color index.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.demoisaic-Union{Tuple{T}, Tuple{T, LibRaw.RawImage}} where T<:LibRaw.DemosaicMethod","page":"Home","title":"LibRaw.demoisaic","text":"demoisaic(algorithm::T, image::RawImage) where T <: DemosaicMethod\n\nDemoisaic the raw imageusingalgorithmmethod (e.g.BayerAverage`).\n\nThe resulting array will contains 4 channels (e.g. it will have two green channels), use LibRaw.color_description to get the description of the channels.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.height-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.height","text":"LibRaw.height(image::RawImage)\n\nreturns height of the image (height).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.iparams-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.iparams","text":"iparams(image::RawImage)\n\nReturns iparams struct from libraw_data_t.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_height-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_height","text":"LibRaw.raw_height(image::RawImage)\n\nreturns raw height of the image.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_image-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_image","text":"LibRaw.raw_image(image::RawImage)\n\nWraps the raw_image field of libraw_rawdata_t in an Array. The data might become  corrupted when image is GC'ed.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_width-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_width","text":"LibRaw.raw_width(image::RawImage)\n\nreturns raw width of image.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.subtract_black!-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.subtract_black!","text":"LibRaw.subtract_black!(image::RawImage)\n\nThis call will subtract black level values from RAW data (for suitable RAW data).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.unpack!-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.unpack!","text":"LibRaw.unpack!(image::RawImage)\n\nUnpacks the RAW files of the image, calculates the black level.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.width-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.width","text":"LibRaw.width(image::RawImage)\n\nreturns width of the image (iwidth).\n\n\n\n\n\n","category":"method"}]
}

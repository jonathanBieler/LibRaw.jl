var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LibRaw","category":"page"},{"location":"#LibRaw","page":"Home","title":"LibRaw","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LibRaw.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LibRaw]","category":"page"},{"location":"#LibRaw.RawImage-Tuple{String}","page":"Home","title":"LibRaw.RawImage","text":"RawImage(path::String; unpack = true)\n\nConstructor for the RawImage struct, taking a path to a raw image file as input.\n\n\n\n\n\n","category":"method"},{"location":"#Base.maximum-Tuple{LibRaw.RawImage}","page":"Home","title":"Base.maximum","text":"maximum(image::RawImage)\n\nMaximum pixel value. Calculated from the data for most cameras, hardcoded for others.  This value may be changed on postprocessing stage (when black subtraction performed) and by automated maximum adjustment.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.black_level-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.black_level","text":"black_level(image::RawImage)\n\nBlack level. Depending on the camera, it may be zero (this means that black has been subtracted  at the unpacking stage or by the camera itself), calculated at the unpacking stage, read from the RAW file, or hardcoded.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.black_level_per_channel-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.black_level_per_channel","text":"black_level_per_channel(image::RawImage)\n\n! This returns the 4 first values in the `cblack` field of `libraw_colordata_t`. \nLibraw seems to do extra processing to populate these values, see :\nhttps://github.com/letmaik/rawpy/blob/e2f171a0a50053209938e37de3ae0b5fcf6daf08/rawpy/data_helper.h#L11\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.camera_list-Tuple{}","page":"Home","title":"LibRaw.camera_list","text":"camera_list()\n\nReturns list of supported cameras.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.camera_multipliers-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.camera_multipliers","text":"camera_multipliers(image:RawImage)\n\nWhite balance coefficients (as shot). Either read from file or calculated.\n\nReturns of vector of length 4 containing the camera multipliers. https://www.libraw.org/node/2411\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.camera_rgb-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.camera_rgb","text":"camera_rgb(image:RawImage)\n\nCamera to sRGB conversion matrix.\n\nReturns of a 3x3 matrix (last row is dropped).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.color_description-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.color_description","text":"color_description(image::RawImage)\n\nDescription of colors numbered from 0 to 3 (RGBG,RGBE,GMCY, or GBTG).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.color_index-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.color_index","text":"LibRaw.color_index(image::LibRawImage)\n\nReturns a matrix with the same dimension as the RAW image containing the color index.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.colordata-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.colordata","text":"colordata(image::RawImage)\n\nReturns a pointer to colordata field of libraw_data_t.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.demoisaic-Union{Tuple{T}, Tuple{T, LibRaw.RawImage}} where T<:LibRaw.DemosaicMethod","page":"Home","title":"LibRaw.demoisaic","text":"demoisaic(algorithm::T, image::RawImage) where T <: DemosaicMethod\n\nDemoisaic the raw image using algorithm method (e.g. BayerAverage).\n\nThe resulting array will contains 4 channels (e.g. it will have two green channels), use LibRaw.color_description to get the description of the channels.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.height-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.height","text":"LibRaw.height(image::RawImage)\n\nreturns height of the image (height).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.iparams-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.iparams","text":"iparams(image::RawImage)\n\nReturns iparams struct from libraw_data_t.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.pre_multipliers-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.pre_multipliers","text":"pre_multipliers(image:RawImage)\n\nWhite balance coefficients for daylight (daylight balance). Either read from file,  or calculated on the basis of file data, or taken from hardcoded constants.\n\nReturns a vector of length 4 containing the pre-multipliers.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_height-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_height","text":"LibRaw.raw_height(image::RawImage)\n\nreturns raw height of the image.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_image-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_image","text":"LibRaw.raw_image(image::RawImage)\n\nWraps the raw_image field of libraw_rawdata_t in an Array. The data might become  corrupted when image is GC'ed.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.raw_width-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.raw_width","text":"LibRaw.raw_width(image::RawImage)\n\nreturns raw width of image.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.subtract_black!-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.subtract_black!","text":"LibRaw.subtract_black!(image::RawImage)\n\nThis call will subtract black level values from RAW data (for suitable RAW data).\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.unpack!-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.unpack!","text":"LibRaw.unpack!(image::RawImage)\n\nUnpacks the RAW files of the image, calculates the black level.\n\n\n\n\n\n","category":"method"},{"location":"#LibRaw.width-Tuple{LibRaw.RawImage}","page":"Home","title":"LibRaw.width","text":"LibRaw.width(image::RawImage)\n\nreturns width of the image (iwidth).\n\n\n\n\n\n","category":"method"}]
}
